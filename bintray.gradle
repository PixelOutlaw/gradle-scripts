/**
 * This file is part of gradle-scripts, licensed under the MIT License.
 *
 * Copyright (C) 2016 Pixel Outlaw <topplethenun@pixeloutlaw.io>
 *
 * Permission is hereby granted, free of charge,
 * to any person obtaining a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
 * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
import nebula.plugin.bintray.NebulaBintrayPublishingPlugin

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.netflix.nebula:nebula-bintray-plugin:3.5.2'
    }
}

allprojects {
    apply plugin: NebulaBintrayPublishingPlugin

    try {
        tasks.bintrayUpload.dependsOn build
        if (!"${project.version}".endsWith('-SNAPSHOT')) {
            tasks.publish.dependsOn bintrayUpload
        }
    } catch (Exception ignored) {
        println("${project.name} does not have a build task or it does not have a publish task")
    }
}

bintray {
    user = "${System.getenv('BINTRAY_USER') ?: bintray_user}"
    key = "${System.getenv('BINTRAY_KEY') ?: bintray_key}"
    publications = ['nebula']
    pkg {
        repo = 'pixeloutlaw-jars'
        userOrg = 'pixeloutlaw'
        name = "${project.name}"
        desc = "${project.description}"
        websiteUrl = "https://github.com/PixelOutlaw/${rootProject.name}"
        issueTrackerUrl = "https://github.com/PixelOutlaw/${rootProject.name}/issues"
        vcsUrl = "https://github.com/PixelOutlaw/${rootProject.name}.git"
        licenses = ['MIT']
        publicDownloadNumbers = true
        version {
            name = project.version
            vcsTag = project.version
        }
    }
}